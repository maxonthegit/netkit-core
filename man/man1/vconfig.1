.TH VCONFIG 1 "November 2009" "" Netkit
.SH NAME
vconf \- attach network interfaces to running netkit virtual machines
.SH SYNOPSIS
\fBvconf\fR [options] \fIMACHINE\-ID\fR


\" ########################################

.SH DESCRIPTION

The \fIvconf\fR command can be used to attach network interfaces to running
virtual machines ``on the fly''. The affected machine is identified by a \fBMACHINE\-ID\fR,
which is either the PID or the name of a running virtual machine.

One or more interfaces can be attached or detached on a running virtual machine
by using the following option an arbitrary number of times.

.TP
.B
--ethN=\fIDOMAIN\fR
The syntax for this option is exactly the same as for the corresponding option of
\fBvstart\fR (see \fBvstart\fR(1)). It is also possible to provide an empty
\fIDOMAIN\fR, in which case the network interface \fBethN\fR will be no longer
available on the virtual machine.
.br
Please read the \fBvstart\fR documentation before using this option to setup ``\fBtap\fR'' collision domains.

Attaching an already existing interface to a virtual machine causes an error.

.PP

The following options are also supported by \fIvconf\fR.

.TP
.B
-h
.PD 0
.TP
.B
--help
Show usage information. This option also reports information about the range of
allowed interface numbers, configured inside \fInetkit.conf\fR (see \fBnetkit.conf\fR(5)).

.TP
.B
-p
.PD 0
.TP
.B
--print
Instead of actually starting virtual hubs and configuring network interfaces,
just show which commands would be executed.

.TP
.B
-q
.PD 0
.TP
.B
--quiet
This option suppresses any kind of output, except errors and warnings.
  
.TP
.B
-u \fIUSERNAME\fR
.PD 0
.TP
.B
--user=\fIUSERNAME\fR
This option tells \fIvconf\fR to only work on virtual machines owned by \fIUSERNAME\fR.
By default, \fIvconf\fR only allows to attach interfaces to virtual machines
started by the current user (i.e., the one who launched \fIvconf\fR). By using
this option it is possible to attach interfaces to someone else's virtual machines
(this requires administrative privileges). The special user name `\fB\-\fR' is
reserved and allows to consider all virtual machines, regardless of their owner.

Consider that different users may be running virtual machines having the same
name. Hence, using the `\fB\-\-user\fR=\fB-\fR' option when \fIMACHINE\-ID\fR
is a virtual machine name may arise ambiguities. In such a case, \fIvconf\fR
only works on the virtual machine reported by issuing the command
.nh
`vlist -u - \fIMACHINE\-ID\fR'.
.hy

.TP
.B
--version
Print information about the installed Netkit release and the host kernel version
and exit. If ``\fI<unavailable>\fR'' is printed instead of a version number,
then the corresponding information could not be retrieved (for example because
a non-standard Netkit kernel or filesystem is being used).



.SS
Important notes
Support for detaching network interfaces from running virtual machines may still
be buggy. In particular, in some cases it may not be possible to reattach a
previously detached network interface.

Due to the mechanism by which they are configured, network interfaces attached
by using this command are not shown by the \fIvlist\fR command, even
when requesting complete details about the virtual machine.
.br
As a side effect of this, virtual hubs (collision domains) started by
\fIvconf\fR are not automatically stopped when all the connected machines are
shut down. In order to do this, you should use the \fBvclean\fR command with the
option \fB\-H\fR (see \fBvclean\fR(1)).

An important difference with respect to attaching interfaces with \fIvstart\fR (see
\fBvstart\fR(1)) is that, when using ``\fBtap\fR'' collision domains, the
configuration of the virtual machine is not automatically updated. In particular,
assume that interface eth0 has been set up using \fIvconf\fR with the following option:

.nf
\-\-eth0=tap,\fITAP\-ADDRESS\fR,\fIGUEST\-ADDRESS\fR
.fi

After doing so, the following operations must be performed inside the virtual
machine in order to make the interface operational:

.IP 1) 3
Interface eth0 must be assigned IP address \fIGUEST\-ADDRESS\fR. You can do this
by using the following command:

.nf
ifconfig eth0 \fIGUEST\-ADDRESS\fR up
.fi

Notice that \fIvconf\fR does not consider the \fIGUEST\-ADDRESS\fR parameter,
even if the command syntax requires it. Hence, you are free to use any IP
address in configuring interface eth0 (provided that it is on the same (sub)network
as \fITAP\-ADDRESS\fR). Nevertheless, it is a good rule to be coherent with the
\fIGUEST\-ADDRESS\fR provided on the \fIvconf\fR command line.

.IP 2) 3
A default route must be configured to point to the host side of the ``\fBtap\fR''
interface. This can be achieved by issuing the following command:

.nf
route add default gw \fITAP\-ADDRESS\fR dev eth0
.fi

.PP
Once this is done, the interface is ready for use.

Please make sure you run `vclean -H' (see \fBvclean\fR(1)) when a ``\fBtap\fR''
collision domain is no more used. Not doing so may result in the impossibility
to correctly configure new ``\fBtap\fR'' collision domains. For example, this
may prevent from correctly setting the \fITAP\-ADDRESS\fR for a new ``\fBtap\fR''
domain.




\" ########################################

.SH "ENVIRONMENT VARIABLES"

All Netkit commands require that the \fBNETKIT_HOME\fR variable contains the
name of the directory Netkit is installed in.

Apart from this, \fIvconf\fR supports no other environment variables.


\" ########################################

.SH EXAMPLES

.TP
.B
.nf
vconf --eth0=A pc1
.fi
Equip virtual machine \fBpc1\fR with a new interface (\fBeth0\fR) which is attached
to the virtual collision domain \fBA\fR.

.TP
.B
.nf
vconf --eth1=tap,10.0.0.1,10.0.0.2 -u foo pc2
.fi
Configure a new interface (\fBeth1\fR) on virtual machine \fBpc2\fR owned
by user \fBfoo\fR. The host side of the interface will be automatically configured
to have IP address \fB10.0.0.1\fR. The interface inside the virtual machine will have
to be configured by issuing the following commands:

.nf
ifconfig eth1 10.0.0.2 up
route add default gw 10.0.0.1 dev eth1
.fi

Running this example requires administrative privileges. The \fIvconf\fR
command will take care of asking you for the root password if needed. For more
information about how Netkit gains root privileges, see \fBUSE_SUDO\fR and
\fBSETTING UP NETKIT FOR USE WITH SUDO\fR in the man page of
\fBnetkit.conf\fR(5).


\" ########################################

.SH "SEE ALSO"
\fIvclean\fR(1),
\fIvcrash\fR(1),
\fIvhalt\fR(1),
\fIvlist\fR(1),
\fIvstart\fR(1),
\fInetkit.conf\fR(5).


\" ########################################

.SH AUTHOR
\fIvconf\fR script: Massimo Rimondini
.br
This man page: Massimo Rimondini


\" ########################################

.so include/bugreport.man
